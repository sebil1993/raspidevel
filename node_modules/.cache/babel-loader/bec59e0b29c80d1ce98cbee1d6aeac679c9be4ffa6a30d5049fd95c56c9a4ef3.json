{"ast":null,"code":"import ItemTable from './components/ItemTable.vue';\nimport json from \"./assets/SteamInventory.json\";\nexport default {\n  name: 'App',\n  components: {\n    ItemTable\n  },\n  data() {\n    return {\n      itemms: {\n        name: this.returnHello()\n      }\n    };\n  },\n  methods: {\n    returnHello() {\n      return \"hello\";\n    },\n    countOccurencesForClassId(classID) {\n      let counter = 0;\n      for (let i = 0; i < this.items.length; i++) {\n        if (this.items[i] == classID) {\n          counter++;\n        }\n      }\n      return counter;\n    },\n    getItemNameForClassId(classID) {\n      return this.descriptions.find(desc => desc.class_id == classID).market_name;\n    }\n  },\n  computed: {\n    inventoryCount() {\n      return Object.entries(json.assets).length;\n    },\n    descriptions() {\n      return json.descriptions.map(desc => ({\n        market_name: desc.market_name,\n        class_id: desc.classid\n      }));\n    },\n    items() {\n      return json.assets.map(item => item.classid);\n    },\n    uniqueItems() {\n      return [...new Set(this.items)];\n    }\n  },\n  created() {\n    console.log(this.uniqueItems);\n  }\n};","map":{"version":3,"mappings":"AAcA;AACA;AAEA;EACAA;EACAC;IACAC;EACA;EACAC;IACA;MACAC;QACAJ;MACA;IACA;EACA;EACAK;IACAC;MACA;IACA;IACAC;MACA;MACA;QACA;UACAC;QACA;MACA;MACA;IACA;IACAC;MACA;IACA;EACA;EACAC;IACAC;MACA;IACA;IACAC;MACA;QAAAC;QAAAC;MAAA;IACA;IACAC;MACA;IACA;IACAC;MACA;IACA;EACA;EACAC;IACAC;EACA;AACA","names":["name","components","ItemTable","data","itemms","methods","returnHello","countOccurencesForClassId","counter","getItemNameForClassId","computed","inventoryCount","descriptions","market_name","class_id","items","uniqueItems","created","console"],"sourceRoot":"src","sources":["App.vue"],"sourcesContent":["<template>\r\n  <div id=\"app\">\r\n    <ItemTable></ItemTable>\r\n    {{ inventoryCount }}\r\n    <!-- {{ countOccurencesForClassId(uniqueItems[1]) }}\r\n    {{ uniqueItems }} -->\r\n    <!-- <div v-for=\"item in uniqueItems\" :key=\"item\">\r\n      {{ countOccurencesForClassId(item) + \" \" + getItemNameForClassId(item) }}\r\n    </div> -->\r\n    {{ itemms.name }}\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport ItemTable from './components/ItemTable.vue';\r\nimport json from \"./assets/SteamInventory.json\";\r\n\r\nexport default {\r\n  name: 'App',\r\n  components: {\r\n    ItemTable\r\n  },\r\n  data() {\r\n    return {\r\n      itemms:{\r\n        name: this.returnHello()\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    returnHello(){\r\n      return \"hello\"\r\n    },\r\n    countOccurencesForClassId(classID) {\r\n      let counter = 0;\r\n      for (let i = 0; i < this.items.length; i++) {\r\n        if (this.items[i] == classID) {\r\n          counter++;\r\n        }\r\n      }\r\n      return counter;\r\n    },\r\n    getItemNameForClassId(classID) {\r\n      return this.descriptions.find((desc) => desc.class_id == classID).market_name;\r\n    }\r\n  },\r\n  computed: {\r\n    inventoryCount() {\r\n      return Object.entries(json.assets).length;\r\n    },\r\n    descriptions() {\r\n      return json.descriptions.map(desc => ({ market_name: desc.market_name, class_id: desc.classid }));\r\n    },\r\n    items() {\r\n      return json.assets.map(item => item.classid)\r\n    },\r\n    uniqueItems() {\r\n      return ([... new Set(this.items)]);\r\n    },\r\n  },\r\n  created(){\r\n    console.log(this.uniqueItems);\r\n  }\r\n}\r\n</script>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}